package leetcode.easy;

import java.util.Arrays;

/**
 * 1351. Count Negative Numbers in a Sorted Matrix
 * Easy
 *
 * 2237
 *
 * 74
 *
 * Add to List
 *
 * Share
 * Given a m x n matrix grid which is sorted in non-increasing order both row-wise and column-wise, return the number of negative numbers in grid.
 *
 *
 *
 * Example 1:
 *
 * Input: grid = [[4,3,2,-1],[3,2,1,-1],[1,1,-1,-2],[-1,-1,-2,-3]]
 * Output: 8
 * Explanation: There are 8 negatives number in the matrix.
 * Example 2:
 *
 * Input: grid = [[3,2],[1,0]]
 * Output: 0
 *
 *
 * Constraints:
 *
 * m == grid.length
 * n == grid[i].length
 * 1 <= m, n <= 100
 * -100 <= grid[i][j] <= 100
 *
 *
 * Follow up: Could you find an O(n + m) solution?
 *
 * Success
 * Details
 * Runtime: 25 ms, faster than 13.82% of Java online submissions for Count Negative Numbers in a Sorted Matrix.
 * Memory Usage: 42.9 MB, less than 77.71% of Java online submissions for Count Negative Numbers in a Sorted Matrix.
 */
public class _1351_NegativeNumbersInSortedGrid {

    class Solution {
        public int countNegatives(int[][] grid) {
            if (grid == null || grid[0] == null || grid[0].length < 1) {
                return 0;
            }

            int len = grid[0].length;
            int sum = 0;

            for (int[] arr : grid) {
                Arrays.sort(arr);
                int ind = Arrays.binarySearch(arr, -1);
                System.out.printf("arr: %s, ind: %s\n", Arrays.toString(arr), ind);

                if (ind < 0) {
                    ind = -ind - 1;
                } else {
                    while (ind < len && arr[ind] < 0) {
                        ind++;
                    }
                }
                //System.out.printf("arr: %s, ind: %s\n", Arrays.toString(arr), ind);
                sum+= ind > 0 ? ind : 0;
            }

            return sum;
        }
    }
}

/**

 [[11,10,9,8,7,6,5,4,3,3,3,3,3,3,2,1,1,1,0,0,0,-1,-2,-2,-3,-4,-15,-15,-15],
 [10,9,9,7,6,5,5,4,2,-8,-9,-10,-11,-11,-12,-13,-13,-13,-13,-14,-14,-15,-15,-16,-16,-16,-16,-17,-17],
 [9,3,3,3,3,2,-17,-18,-19,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20],
 [8,3,3,-9,-10,-10,-17,-18,-19,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20],
 [8,3,2,-9,-10,-11,-17,-19,-19,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20],
 [7,3,1,-10,-11,-11,-17,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20],
 [7,3,0,-11,-11,-11,-17,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20],
 [7,2,0,-12,-12,-12,-17,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20],
 [6,1,0,-12,-13,-13,-17,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20],
 [6,1,0,-12,-13,-13,-18,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20],
 [5,1,-1,-12,-13,-14,-18,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20],
 [4,1,-1,-12,-13,-14,-18,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20],
 [4,0,-2,-12,-14,-15,-19,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20],
 [4,0,-3,-13,-15,-15,-19,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20],
 [3,-1,-3,-13,-15,-15,-19,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20],
 [3,-1,-3,-13,-16,-18,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20],
 [2,-1,-4,-13,-16,-19,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20],
 [2,-1,-5,-14,-16,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20],
 [2,-1,-5,-15,-17,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20],
 [1,-1,-6,-15,-18,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20],
 [1,-1,-6,-16,-18,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20],
 [1,-1,-7,-17,-18,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20],
 [1,-2,-8,-17,-18,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20],
 [1,-2,-9,-17,-18,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20],
 [0,-2,-10,-17,-18,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20]]


 */